// Generated by CoffeeScript 1.3.3
(function() {
  var Grid;

  Grid = (function() {

    function Grid(width, height) {
      this.width = width;
      this.height = height;
      this._nodes = this._makenodes();
    }

    Grid._makenodes = function() {
      var i, j, nodes, _i, _j, _ref, _ref1;
      nodes = [];
      for (i = _i = 0, _ref = this.width; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        nodes[i] = [];
        for (j = _j = 0, _ref1 = this.height; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          nodes[i][j] = new Node(x, y);
        }
      }
      return nodes;
    };

    Grid.prototype.getnode = function(x, y) {
      if (x >= 0 && x < this.width && y >= 0 && y < this.width) {
        return this._nodes[x][y];
      } else {
        return new Node(x, y);
      }
    };

    Grid.prototype.occupied = function(x, y) {
      return this.getnode(x, y).occupied;
    };

    Grid.prototype.unsafe = function(x, y) {
      return this.occupied(x - 1, y + 1) || this.occupied(x, y + 1) || this.occupied(x + 1, y + 1) || this.occupied(x - 1, y) || this.occupied(x, y) || this.occupied(x + 1, y) || this.occupied(x - 1, y - 1) || this.occupied(x, y - 1) || this.occupied(x + 1, y - 1);
    };

    return Grid;

  })();

}).call(this);
