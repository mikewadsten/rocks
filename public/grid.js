// Generated by CoffeeScript 1.3.3
(function() {
  var Grid;

  Grid = (function() {

    function Grid(width, height) {
      this.width = width;
      this.height = height;
      this._nodes = Grid._makenodes(this.width, this.height);
    }

    Grid._makenodes = function(width, height) {
      var nodes, x, y, _i, _j, _ref, _ref1;
      nodes = [];
      for (x = _i = 0, _ref = width - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; x = 0 <= _ref ? ++_i : --_i) {
        nodes[x] = [];
        for (y = _j = 0, _ref1 = height - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; y = 0 <= _ref1 ? ++_j : --_j) {
          nodes[x][y] = new Node(x, y);
        }
      }
      return nodes;
    };

    Grid.prototype.getnode = function(x, y) {
      if (x >= 0 && x < this.width && y >= 0 && y < this.width) {
        return this._nodes[x][y];
      } else {
        return new Node(x, y);
      }
    };

    Grid.prototype.occupied = function(x, y) {
      return getnode(x, y).occupied;
    };

    Grid.prototype.unsafe = function(x, y) {
      return occupied(x - 1, y + 1) || occupied(x, y + 1) || occupied(x + 1, y + 1) || occupied(x - 1, y) || occupied(x, y) || occupied(x + 1, y) || occupied(x - 1, y - 1) || occupied(x, y - 1) || occupied(x + 1, y - 1);
    };

    return Grid;

  })();

  window.Grid = Grid;

}).call(this);
