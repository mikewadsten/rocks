// Generated by CoffeeScript 1.3.3
(function() {
  var Ship;

  Ship = (function() {

    function Ship(xpos, ypos, gridwidth, gridheight) {
      this.xpos = xpos;
      this.ypos = ypos;
      this.gridwidth = gridwidth;
      this.gridheight = gridheight;
      this._history = [];
    }

    Ship.dirtobyte = function(direction) {
      switch (direction) {
        case "s":
          return 0x0;
        case "ul":
          return 0x1;
        case "up":
          return 0x2;
        case "ur":
          return 0x3;
        case "r":
          return 0x4;
        case "dr":
          return 0x5;
        case "d":
          return 0x6;
        case "dl":
          return 0x7;
        case "l":
          return 0x8;
        default:
          return 0x0;
      }
    };

    Ship.prototype.move = function(direction) {
      var byte;
      byte = this.dirtobyte(direction);
      if ((byte === 0x1 || byte === 0x7 || byte === 0x8) && this.xpos > 0) {
        this.xpos -= 1;
      }
      if ((byte === 0x3 || byte === 0x4 || byte === 0x5) && this.xpos < this.gridwidth) {
        this.xpos += 1;
      }
      if ((byte === 0x5 || byte === 0x6 || byte === 0x7) && this.ypos > 0) {
        this.ypos -= 1;
      }
      if ((byte === 0x1 || byte === 0x2 || byte === 0x3) && this.ypos < this.gridheight) {
        this.ypos += 1;
      }
      console.log("Ship moved... " + byte);
      this._addhistory(byte);
      return this;
    };

    Ship._addhistory = function(byte) {
      if (this._history.length >= 50) {
        this._history.shift();
      }
      return this._history.push(byte);
    };

    Ship.prototype.gethistory = function() {
      return this._history;
    };

    return Ship;

  })();

  window.Ship = Ship;

}).call(this);
